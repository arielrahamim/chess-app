name: Docker Image CI
run-name: Building & Pushing ${{ github.event.inputs.image }} Image 
on:
  workflow_dispatch:
    inputs:
      image: 
        type: choice
        description: "Choose Which Image to Build"
        required: true
        options:
        - frontend
        - backend
        - mongodb
      git_tag: 
        type: boolean
        required: false
        description: "Remove All Olds Tags From Repo"

jobs:
  ImageBuilder:
      permissions: # modify the default permissions granted to the GITHUB_TOKEN
        contents: write

      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4
          with: 
            fetch-depth: '0'
            repository: arielrahamim/chess-app
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_TOKEN }}

        - name: set env variable
          run: | 
              current_tag=$(git tag --sort=creatordate | grep ${{ github.event.inputs.image }} | tail -n 1)
              short_commit_hash=$(git rev-parse --short HEAD)
              image=$(echo $current_tag | cut -d "-" -f1)
              major=$(echo $current_tag | cut -d "-" -f2 | cut -d "." -f1)
              minor=$(echo $current_tag | cut -d "-" -f2 | cut -d "." -f2)
              patch=$(echo $current_tag | cut -d "-" -f2 | cut -d "." -f3)

              patch=$((patch + 1))
              new_tag=""
              new_tag="$image-$major.$minor.$patch-$short_commit_hash"
              echo "latest_tag=${new_tag}" >> $GITHUB_ENV
        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: ${{ github.event.inputs.image }}/.
            push: true
            tags: arielrahamim/chess-app:${{ env.latest_tag }}

        - name: Applying The New Tag To Repo
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git tag "${{ env.latest_tag }}" 
            git push --tag
            echo "arielrahamim/chess-app:${{ github.event.inputs.image }}:${{ env.latest_tag }}"

        - name: git_tag
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git push --delete origin $(git tag --sort=creatordate | grep frontend | head -n -1)

        # - name: Delete Old Docker Images on Docker Hub
        #   run: |
        #       # Fetch all tags for the repository
        #       all_tags=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKER_HUB_TOKEN }}" "https://hub.docker.com/v2/repositories/arielrahamim/chess-app/tags/" | jq -r '.results[].name')
    
        #       # Delete all tags except the latest one
        #       for tag in $all_tags; do
        #         if [ "$tag" != "${{ github.event.inputs.image }}:${{ env.latest_tag }}" ]; then
        #           curl -X DELETE -H "Authorization: Bearer ${{ secrets.DOCKER_HUB_TOKEN }}" "https://hub.docker.com/v2/repositories/arielrahamim/chess-app/tags/$tag/"
        #         fi
        #       done


          



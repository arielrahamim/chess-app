{"ast":null,"code":"import _toConsumableArray from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef,useContext}from'react';import axios from'axios';import Chess from'chess.js';import Chessboard from'chessboardjsx';import{Spinner,Table,Modal}from'react-bootstrap';import UserContext from'../../context/UserContext';import{GenerateMove}from'../Utils/GenerateMove';import chess_move_sound from'../../assets/chess_move_sound.mp3';/*\nfor the generation of computer's move minimax algorithm is used. it is further optimized using alpha beta pruning.\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Computer(){var _useState=useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'),_useState2=_slicedToArray(_useState,2),fen=_useState2[0],setFen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),moves=_useState4[0],setMoves=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),playerColor=_useState6[0],setPlayerColor=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),turn=_useState8[0],setTurn=_useState8[1];var _useState9=useState('Ongoing'),_useState10=_slicedToArray(_useState9,2),matchStatus=_useState10[0],setMatchStatus=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),inCheck=_useState12[0],setInCheck=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showPopUp=_useState14[0],setShowPopUp=_useState14[1];var _useState15=useState({}),_useState16=_slicedToArray(_useState15,2),squareStyles=_useState16[0],setSquareStyles=_useState16[1];var _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),isLoading=_useState18[0],setisLoading=_useState18[1];var chess=new Chess(fen);var signal=axios.CancelToken.source();var User=useContext(UserContext);var movesRef=useRef(moves);var turnRef=useRef(turn);var playerColorRef=useRef(playerColor);var isMounted=useRef(true);var checkWinStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(lastMoveColor){var winner;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// check if game is ended or not. if ended then determine the winner using who played last move.\nwinner='';if(chess.in_draw()){winner='draw';}else if(chess.in_checkmate()){winner=lastMoveColor;}if(winner!==''){if(winner==='draw'){setMatchStatus('Game draw');}else if(lastMoveColor===playerColor){setMatchStatus('You Won');}else{setMatchStatus('You Lose');}setShowPopUp(true);}case 3:case\"end\":return _context.stop();}},_callee);}));return function checkWinStatus(_x){return _ref.apply(this,arguments);};}();var updateScroll=function updateScroll(){// if moves history doesn't fit in window then scroll down to latest move.\nvar element=document.getElementById(\"moves-table-container\");if(element)element.scrollTop=element.scrollHeight;};useEffect(function(){// if new move is added then scroll down to latest move.\nif(movesRef.current.length!==moves.length)updateScroll();turnRef.current=turn;playerColorRef.current=playerColor;movesRef.current=moves;});useEffect(function(){var JoinGame=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:try{// user will play white and computer will play black.\nsetTurn('white');setPlayerColor('white');setisLoading(false);}catch(error){if(axios.isCancel(error)){console.error('Error: ',error.message);}else{console.log(error.response.data.error);}setisLoading(false);}case 1:case\"end\":return _context2.stop();}},_callee2);}));return function JoinGame(){return _ref2.apply(this,arguments);};}();JoinGame();return function(){isMounted.current=false;signal.cancel('Api calls are being cancelled');};},[]);var handleMove=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(move){var audioEl,newFen;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!(turn!==playerColor)){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:if(!chess.move(move)){_context3.next=11;break;}// play chess move sound.\naudioEl=document.getElementsByClassName(\"audio-element\")[0];audioEl.play();newFen=chess.fen();checkWinStatus(playerColor);if(isMounted.current){// update all the states.\nsetFen(newFen);setMoves([].concat(_toConsumableArray(movesRef.current),[{from:move.from,to:move.to}]));setInCheck(chess.in_check()&&!chess.in_checkmate());if(newFen.split(' ')[1]==='w'){setTurn('white');}else{setTurn('black');}}if(!(chess.in_draw()||chess.in_checkmate())){_context3.next=10;break;}return _context3.abrupt(\"return\");case 10:setTimeout(function(){// playing random moves\n// const generatedMoves = chess.moves({ verbose: true });\n// const index = parseInt(Math.random() * (generatedMoves.length - 1));\n// move = generatedMoves[index];\n// generate move using minimax and alpha beta pruning.\nmove=GenerateMove(chess.fen());chess.move(move);setFen(chess.fen());setMoves([].concat(_toConsumableArray(movesRef.current),[{from:move.from,to:move.to}]));setInCheck(chess.in_check()&&!chess.in_checkmate());setTurn('white');checkWinStatus('black');setTimeout(function(){var audioEl2=document.getElementsByClassName(\"audio-element2\")[0];audioEl2.play();},300);},50);case 11:case\"end\":return _context3.stop();}},_callee3);}));return function handleMove(_x2){return _ref3.apply(this,arguments);};}();var onMouseOverSquare=function onMouseOverSquare(square){// when user puts mouse over some square then generate possible movement from that square.\nvar moves=chess.moves({square:square,verbose:true});var styling={};for(var i=0;i<moves.length;i++){styling[moves[i].to]={background:\"radial-gradient(circle, #b5e48c 38%, transparent 40%)\",borderRadius:\"50%\"};}setSquareStyles(styling);};var onMouseOutSquare=function onMouseOutSquare(){setSquareStyles({});};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"Spinner\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"primary\"})});}return/*#__PURE__*/_jsxs(\"div\",{id:\"GameContainer\",children:[/*#__PURE__*/_jsx(Modal,{show:showPopUp,backdrop:\"static\",onHide:function onHide(){return setShowPopUp(false);},keyboard:false,children:/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:matchStatus})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"left-sidebar-wrapper\",children:/*#__PURE__*/_jsx(Table,{striped:true,bordered:true,hover:true,variant:\"dark\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[inCheck&&/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{colSpan:\"2\",id:\"in-check-text\",children:[turn.charAt(0).toUpperCase()+turn.slice(1),\" in Check\"]})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Turn\"}),/*#__PURE__*/_jsx(\"td\",{children:turn})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Your Color\"}),/*#__PURE__*/_jsx(\"td\",{children:playerColor})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Status\"}),matchStatus==='Ongoing'?/*#__PURE__*/_jsx(\"td\",{children:matchStatus}):matchStatus==='You Won'?/*#__PURE__*/_jsx(\"td\",{id:\"win-status\",children:\"You Won\"}):/*#__PURE__*/_jsx(\"td\",{id:\"lose-status\",children:\"You Lose\"})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"chessboard-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"player-information-opponent\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Computer\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Rating: Unknown\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"chessboard\",children:/*#__PURE__*/_jsx(Chessboard,{width:'550',position:fen,onDrop:function onDrop(move){handleMove({from:move.sourceSquare,to:move.targetSquare,promotion:'q'});},orientation:playerColor,onMouseOverSquare:onMouseOverSquare,onMouseOutSquare:onMouseOutSquare,squareStyles:squareStyles,lightSquareStyle:{backgroundColor:\"AliceBlue\"},darkSquareStyle:{backgroundColor:\"#007f5f\"}})}),/*#__PURE__*/_jsxs(\"div\",{id:\"player-information-you\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Username: \",User.user.username||'Unknown']}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Rating: \",User.user.rating||'Unknown']})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"right-sidebar-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{id:\"moves-table-container\",children:/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,variant:\"dark\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",id:\"moves-header\",children:\"Moves\"})})}),/*#__PURE__*/_jsx(\"tbody\",{children:moves.map(function(move,index){if(index%2===0){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"move-color-indicator-white\"}),/*#__PURE__*/_jsx(\"td\",{className:\"move-text\",children:\"\".concat(move.from,\" -> \").concat(move.to)})]},index);}else{return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"move-color-indicator-black\"}),/*#__PURE__*/_jsx(\"td\",{className:\"move-text\",children:\"\".concat(move.from,\" -> \").concat(move.to)})]},index);}})})]})})})]}),/*#__PURE__*/_jsx(\"audio\",{className:\"audio-element\",children:/*#__PURE__*/_jsx(\"source\",{type:\"audio/mp3\",src:chess_move_sound})}),/*#__PURE__*/_jsx(\"audio\",{className:\"audio-element2\",children:/*#__PURE__*/_jsx(\"source\",{type:\"audio/mp3\",src:chess_move_sound})})]});}export default Computer;","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","axios","Chess","Chessboard","Spinner","Table","Modal","UserContext","GenerateMove","chess_move_sound","jsx","_jsx","jsxs","_jsxs","Computer","_useState","_useState2","_slicedToArray","fen","setFen","_useState3","_useState4","moves","setMoves","_useState5","_useState6","playerColor","setPlayerColor","_useState7","_useState8","turn","setTurn","_useState9","_useState10","matchStatus","setMatchStatus","_useState11","_useState12","inCheck","setInCheck","_useState13","_useState14","showPopUp","setShowPopUp","_useState15","_useState16","squareStyles","setSquareStyles","_useState17","_useState18","isLoading","setisLoading","chess","signal","CancelToken","source","User","movesRef","turnRef","playerColorRef","isMounted","checkWinStatus","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lastMoveColor","winner","wrap","_callee$","_context","prev","next","in_draw","in_checkmate","stop","_x","apply","arguments","updateScroll","element","document","getElementById","scrollTop","scrollHeight","current","length","JoinGame","_ref2","_callee2","_callee2$","_context2","error","isCancel","console","message","log","response","data","cancel","handleMove","_ref3","_callee3","move","audioEl","newFen","_callee3$","_context3","abrupt","getElementsByClassName","play","concat","_toConsumableArray","from","to","in_check","split","setTimeout","audioEl2","_x2","onMouseOverSquare","square","verbose","styling","i","background","borderRadius","onMouseOutSquare","className","children","animation","variant","id","show","backdrop","onHide","keyboard","Header","closeButton","Title","striped","bordered","hover","colSpan","charAt","toUpperCase","slice","width","position","onDrop","sourceSquare","targetSquare","promotion","orientation","lightSquareStyle","backgroundColor","darkSquareStyle","user","username","rating","map","index","type","src"],"sources":["/home/mushrambo/projects/eks-chess/chess-front-end/src/components/Game/Computer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport Chess from 'chess.js';\nimport Chessboard from 'chessboardjsx';\nimport { Spinner, Table, Modal } from 'react-bootstrap';\nimport UserContext from '../../context/UserContext';\nimport { GenerateMove } from '../Utils/GenerateMove';\n\nimport chess_move_sound from '../../assets/chess_move_sound.mp3';\n\n\n\n/*\nfor the generation of computer's move minimax algorithm is used. it is further optimized using alpha beta pruning.\n*/\n\n\n\n\nfunction Computer() {\n    const [fen, setFen] = useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1');\n    const [moves, setMoves] = useState([]);\n    const [playerColor, setPlayerColor] = useState('');\n    const [turn, setTurn] = useState('');\n    const [matchStatus, setMatchStatus] = useState('Ongoing');\n    const [inCheck, setInCheck] = useState('');\n    const [showPopUp, setShowPopUp] = useState(false);\n    const [squareStyles, setSquareStyles] = useState({})\n\n    const [isLoading, setisLoading] = useState(true);\n\n    let chess = new Chess(fen);\n    const signal = axios.CancelToken.source();\n    const User = useContext(UserContext);\n\n    const movesRef = useRef(moves);\n    const turnRef = useRef(turn);\n    const playerColorRef = useRef(playerColor);\n    \n    const isMounted = useRef(true);\n    \n\n    const checkWinStatus = async (lastMoveColor) => {\n        // check if game is ended or not. if ended then determine the winner using who played last move.\n        let winner = '';\n        if (chess.in_draw()) {\n            winner = 'draw';\n        } else if (chess.in_checkmate()) {\n            winner = lastMoveColor;\n        }\n        if (winner !== '') {\n            if (winner === 'draw') {\n                setMatchStatus('Game draw');\n            } else if (lastMoveColor === playerColor) {\n                setMatchStatus('You Won');\n            } else {\n                setMatchStatus('You Lose')\n            }\n            setShowPopUp(true);\n        }\n    };\n\n\n    const updateScroll = () => {\n        // if moves history doesn't fit in window then scroll down to latest move.\n        var element = document.getElementById(\"moves-table-container\");\n        if (element)\n            element.scrollTop = element.scrollHeight;\n    }\n    useEffect(() => {\n        // if new move is added then scroll down to latest move.\n        if (movesRef.current.length !== moves.length)\n            updateScroll();\n        turnRef.current = turn;\n        playerColorRef.current = playerColor;\n        movesRef.current = moves;\n    });\n\n    useEffect(() => {\n        const JoinGame = async () => {\n            try {\n                // user will play white and computer will play black.\n                setTurn('white');\n                setPlayerColor('white');\n                setisLoading(false);\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.error('Error: ', error.message);\n                } else {\n                    console.log(error.response.data.error)\n                }\n                setisLoading(false);\n            }\n        };\n        JoinGame();\n        \n        return () => {\n            isMounted.current = false;\n            signal.cancel('Api calls are being cancelled');\n        };\n    }, []);\n\n    const handleMove = async (move) => {\n        // if user tries to move some piece but it is not user's turn then return.\n        if (turn !== playerColor) {\n            return;\n        }\n        if (chess.move(move)) {\n            \n            // play chess move sound.\n            const audioEl = document.getElementsByClassName(\"audio-element\")[0]\n            audioEl.play();\n\n            const newFen = chess.fen();\n            checkWinStatus(playerColor);\n\n            if (isMounted.current) {\n                // update all the states.\n                setFen(newFen);\n                setMoves([...movesRef.current, {from: move.from, to: move.to}]);\n                setInCheck(chess.in_check() && !chess.in_checkmate());\n                if (newFen.split(' ')[1] === 'w') {\n                    setTurn('white');\n                } else {\n                    setTurn('black');\n                }\n            }\n\n            if (chess.in_draw() || chess.in_checkmate())\n                return ;\n\n            setTimeout(() => {\n                // playing random moves\n                // const generatedMoves = chess.moves({ verbose: true });\n                // const index = parseInt(Math.random() * (generatedMoves.length - 1));\n                // move = generatedMoves[index];\n\n\n                // generate move using minimax and alpha beta pruning.\n                move = GenerateMove(chess.fen());\n                chess.move(move);\n\n                \n                setFen(chess.fen());\n                setMoves([...movesRef.current, {from: move.from, to: move.to}]);\n                setInCheck(chess.in_check() && !chess.in_checkmate());\n                setTurn('white');\n                checkWinStatus('black')\n                \n                setTimeout(() => {\n                    const audioEl2 = document.getElementsByClassName(\"audio-element2\")[0]\n                    audioEl2.play();\n                }, 300)\n            }, 50)\n        }\n    };\n\n    const onMouseOverSquare = (square) => {\n        // when user puts mouse over some square then generate possible movement from that square.\n        const moves = chess.moves({ square: square, verbose: true})\n        const styling = {}\n        for (let i = 0; i < moves.length; i++) {\n            styling[moves[i].to] = {\n                background:\"radial-gradient(circle, #b5e48c 38%, transparent 40%)\",\n                borderRadius: \"50%\"\n            }\n        }\n        setSquareStyles(styling)\n    }\n    const onMouseOutSquare = () => {\n        setSquareStyles({})\n    }\n\n    \n    if (isLoading) {\n        return <div className=\"Spinner\" >\n            <Spinner animation=\"border\" variant=\"primary\" />\n        </div>\n    }\n\n    return (\n        <div id=\"GameContainer\">\n            \n            {/* after game ends this modal will show game status to the user */}\n            <Modal show={showPopUp} backdrop=\"static\" onHide={() => setShowPopUp(false)} keyboard={false} >\n                <Modal.Header closeButton>\n                    <Modal.Title>{matchStatus}</Modal.Title>\n                </Modal.Header>\n            </Modal>\n\n\n            <div id=\"wrapper\">\n                <div id=\"left-sidebar-wrapper\">\n                    <Table striped bordered hover variant=\"dark\">\n                        <tbody>\n                            {inCheck && (\n                                <tr>\n                                    <td colSpan=\"2\" id=\"in-check-text\">{turn.charAt(0).toUpperCase() + turn.slice(1)} in Check</td>\n                                </tr>\n                            )}\n                            <tr>\n                                <td>Turn</td>\n                                <td>{turn}</td>\n                            </tr>\n                            <tr>\n                                <td>Your Color</td>\n                                <td>{playerColor}</td>\n                            </tr>\n                            <tr>\n                                <td>Status</td>\n                                {\n                                    matchStatus === 'Ongoing' ? (\n                                        <td>{matchStatus}</td>\n                                    ) : matchStatus === 'You Won' ? (\n                                        <td id=\"win-status\">You Won</td>\n                                    ) : (\n                                        <td id=\"lose-status\">You Lose</td>\n                                    )\n                                }\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n\n                <div id=\"chessboard-wrapper\">\n                    <div id=\"player-information-opponent\">\n                        <div>Computer</div>\n                        <div>Rating: Unknown</div>\n                    </div>\n\n                    {/* render chessboard with config */}\n                    <div id=\"chessboard\">\n                        <Chessboard\n                            width={'550'}\n                            position={fen}\n                            onDrop={(move) => {\n                                handleMove({\n                                    from: move.sourceSquare,\n                                    to: move.targetSquare,\n                                    promotion: 'q',\n                                });\n                            }}\n                            orientation={playerColor}\n                            onMouseOverSquare={onMouseOverSquare}\n                            onMouseOutSquare={onMouseOutSquare}\n                            squareStyles={squareStyles}\n                            lightSquareStyle={{ backgroundColor: \"AliceBlue\" }}\n                            darkSquareStyle={{ backgroundColor: \"#007f5f\" }}\n                        />\n                    </div>\n                    <div id=\"player-information-you\">\n                        <div>Username: {User.user.username || 'Unknown'}</div>\n                        <div>Rating: {User.user.rating || 'Unknown'}</div>\n                    </div>\n                </div>\n\n                \n                <div id=\"right-sidebar-wrapper\">\n                    <div id=\"moves-table-container\">\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th colSpan=\"2\" id=\"moves-header\" >Moves</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    moves.map((move, index) => {\n                                        if (index % 2 === 0) {\n                                            return <tr key={index}>\n                                                <td className='move-color-indicator-white'></td>\n                                                <td className='move-text'>{`${move.from} -> ${move.to}`}</td>\n                                            </tr>\n                                        } else {\n                                            return <tr key={index}>\n                                                <td className='move-color-indicator-black'></td>\n                                                <td className='move-text'>{`${move.from} -> ${move.to}`}</td>\n                                            </tr>\n                                        }\n                                    })\n                                }\n                            </tbody>\n                        </Table>\n                    </div>  \n                </div>\n            </div>\n\n            <audio className=\"audio-element\">\n                <source type=\"audio/mp3\" src={chess_move_sound}></source>\n            </audio>\n            <audio className=\"audio-element2\">\n                <source type=\"audio/mp3\" src={chess_move_sound}></source>\n            </audio>\n        </div>\n    );\n}\n\nexport default Computer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
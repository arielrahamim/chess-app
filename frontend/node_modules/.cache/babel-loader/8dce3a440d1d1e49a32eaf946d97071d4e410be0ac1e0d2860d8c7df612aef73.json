{"ast":null,"code":"import _toConsumableArray from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef,useContext}from'react';import axios from'axios';import io from'socket.io-client';import Chess from'chess.js';import Chessboard from'chessboardjsx';import{SERVER_URL}from'../Utils/Config';import Modal from'react-bootstrap/Modal';import{Redirect}from'react-router-dom';import{Alert,Spinner,Table}from'react-bootstrap';import UserContext from'../../context/UserContext';import chess_move_sound from'../../assets/chess_move_sound.mp3';// Learn more about what is fen in chess from here.\n// https://www.chess.com/terms/fen-chess\n/*\n-first some user creates a game.\n-when someone tries to join game by using game link, first it is checked that game is full or not.\n-if game is not full then user is joined to that game and socket event is fired to other player that opponent has joined.\n-when any player moves the piece, after validating that move another socket event is emitted for the move.\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var socket=io(SERVER_URL);function Game(props){var _useState=useState('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'),_useState2=_slicedToArray(_useState,2),fen=_useState2[0],setFen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),moves=_useState4[0],setMoves=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),turn=_useState6[0],setTurn=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),playerColor=_useState8[0],setPlayerColor=_useState8[1];var _useState9=useState('Ongoing'),_useState10=_slicedToArray(_useState9,2),matchStatus=_useState10[0],setMatchStatus=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),inCheck=_useState12[0],setInCheck=_useState12[1];// when game ends a popup is used to show the status(Win, Lose, Draw)\nvar _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showPopUp=_useState14[0],setShowPopUp=_useState14[1];var _useState15=useState({username:'',rating:0}),_useState16=_slicedToArray(_useState15,2),opponentDetails=_useState16[0],setOpponentDetails=_useState16[1];// when user hovers over a piece on board. to indicate all possible positions, this positions are given different styling.\nvar _useState17=useState({}),_useState18=_slicedToArray(_useState17,2),squareStyles=_useState18[0],setSquareStyles=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),redirectToLogin=_useState20[0],setRedirectToLogin=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),isLoading=_useState22[0],setisLoading=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),isLobbyFull=_useState24[0],setIsLobbyFull=_useState24[1];var chess=new Chess(fen);var User=useContext(UserContext);var gameId=props.match.params.gameId;var signal=axios.CancelToken.source();var movesRef=useRef(moves);var turnRef=useRef(turn);var playerColorRef=useRef(playerColor);var isMounted=useRef(true);var checkWinStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(lastMoveColor){var winner;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// check if game is ended or not. if ended then determine the winner using who played last move.\nwinner='';if(chess.in_draw()){winner='draw';}else if(chess.in_checkmate()){winner=lastMoveColor;}if(!(winner!=='')){_context.next=13;break;}if(winner==='d'){setMatchStatus('Game draw');}else if(lastMoveColor===playerColor){setMatchStatus('You Won');}else{setMatchStatus('You Lose');}setShowPopUp(true);_context.prev=5;_context.next=8;return axios.post(\"\".concat(SERVER_URL,\"/g/gameStatus\"),{winner:winner,gameId:gameId},{cancelToken:signal.token});case 8:_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](5);if(axios.isCancel(_context.t0)){console.error('Error: ',_context.t0.message);}case 13:case\"end\":return _context.stop();}},_callee,null,[[5,10]]);}));return function checkWinStatus(_x){return _ref.apply(this,arguments);};}();var updateScroll=function updateScroll(){// if moves history doesn't fit in window then scroll down to latest move.\nvar element=document.getElementById('moves-table-container');if(element)element.scrollTop=element.scrollHeight;};var fetchOpponentDetails=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var token,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;token=localStorage.getItem('token');_context2.next=4;return axios.get(\"\".concat(SERVER_URL,\"/g/getOpponentDetails\"),{headers:{token:token},params:{gameId:gameId,color:playerColorRef.current}});case 4:res=_context2.sent;if(res.data.bothPlayerJoined){setOpponentDetails({username:res.data.username,rating:res.data.rating});}_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);if(axios.isCancel(_context2.t0)){console.error('Error: ',_context2.t0.message);}case 11:case\"end\":return _context2.stop();}},_callee2,null,[[0,8]]);}));return function fetchOpponentDetails(){return _ref2.apply(this,arguments);};}();useEffect(function(){// if new move is added then scroll down to latest move.\nif(movesRef.current.length!==moves.length)updateScroll();turnRef.current=turn;playerColorRef.current=playerColor;movesRef.current=moves;});useEffect(function(){var JoinGame=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var token,user,game;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(!socket){socket=io(SERVER_URL);}_context4.prev=1;// CHecking if user has logged in or not.\n// if not then redirect user to login page.\ntoken=localStorage.getItem('token');_context4.next=5;return axios.post(\"\".concat(SERVER_URL,\"/u/verifyToken\"),{token:token});case 5:user=_context4.sent;if(user.data.isValid){_context4.next=10;break;}setRedirectToLogin(true);localStorage.removeItem('token');return _context4.abrupt(\"return\");case 10:_context4.next=12;return axios.post(\"\".concat(SERVER_URL,\"/g/join\"),{gameId:gameId,userId:user.data.id},{cancelToken:signal.token});case 12:game=_context4.sent;if(!isMounted.current){_context4.next=27;break;}// setting up the chess configs\nchess.load(game.data.fen);setFen(game.data.fen);setMoves(game.data.moves);setInCheck(chess.in_check()&&!chess.in_checkmate());setPlayerColor(game.data.playerColor);// get current player's turn from fen notation.\ngame.data.fen.split(' ')[1]==='w'?setTurn('white'):setTurn('black');// if match is over then find the game status.\nif(game.data.winner!==''){if(game.data.winner==='draw'){setMatchStatus('Game Draw');}else if(game.data.winner===game.data.playerColor){setMatchStatus('You Won');}else{setMatchStatus('You lose');}}_context4.next=23;return fetchOpponentDetails();case 23:setisLoading(false);// make the socket connection/\nsocket.emit('join',{gameId:gameId});socket.on('receiveMove',function(data){// check if this move is of opponents or not.\nif(data.playerColor!==playerColorRef.current){var audioEl=document.getElementsByClassName('audio-element')[0];audioEl.play();chess.load(data.fen);checkWinStatus(data.playerColor);if(isMounted.current){setFen(chess.fen());setMoves([].concat(_toConsumableArray(movesRef.current),[{from:data.move.from,to:data.move.to}]));setInCheck(chess.in_check()&&!chess.in_checkmate());setTurn(playerColorRef.current);}}});// whenever opponent joins set the  opponentDetail state.\nsocket.on('userJoined',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:fetchOpponentDetails();case 1:case\"end\":return _context3.stop();}},_callee3);})));case 27:_context4.next=33;break;case 29:_context4.prev=29;_context4.t0=_context4[\"catch\"](1);if(axios.isCancel(_context4.t0))console.error('Error: ',_context4.t0.message);else setIsLobbyFull(true);setisLoading(false);case 33:case\"end\":return _context4.stop();}},_callee4,null,[[1,29]]);}));return function JoinGame(){return _ref3.apply(this,arguments);};}();JoinGame();return function(){isMounted.current=false;if(socket){socket.close();socket=null;}signal.cancel('Api calls are being cancelled');};},[]);var handleMove=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(move){var audioEl,newFen;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:if(!(turn!==playerColor)){_context5.next=2;break;}return _context5.abrupt(\"return\");case 2:if(!chess.move(move)){_context5.next=17;break;}// plat the chess move sound.\naudioEl=document.getElementsByClassName('audio-element')[0];audioEl.play();newFen=chess.fen();socket.emit('postMove',{gameId:gameId,playerColor:playerColor,move:move,fen:newFen});checkWinStatus(playerColor);if(isMounted.current){setFen(newFen);setMoves([].concat(_toConsumableArray(moves),[{from:move.from,to:move.to}]));setInCheck(chess.in_check()&&!chess.in_checkmate());// get the player's turn from fen notation.\nif(newFen.split(' ')[1]==='w'){setTurn('white');}else{setTurn('black');}}_context5.prev=9;_context5.next=12;return axios.post(\"\".concat(SERVER_URL,\"/g/postMove\"),{gameId:gameId,move:move,fen:newFen},{cancelToken:signal.token});case 12:_context5.next=17;break;case 14:_context5.prev=14;_context5.t0=_context5[\"catch\"](9);if(axios.isCancel(_context5.t0)){console.error('Error: ',_context5.t0.message);}case 17:case\"end\":return _context5.stop();}},_callee5,null,[[9,14]]);}));return function handleMove(_x2){return _ref5.apply(this,arguments);};}();var onMouseOverSquare=function onMouseOverSquare(square){// when user puts mouse over some square then generate possible movement from that square and display it.\nvar moves=chess.moves({square:square,verbose:true});var styling={};for(var i=0;i<moves.length;i++){styling[moves[i].to]={background:'radial-gradient(circle, #b5e48c 38%, transparent 40%)',borderRadius:'50%'};}setSquareStyles(styling);};var onMouseOutSquare=function onMouseOutSquare(){setSquareStyles({});};// if user is not logged in then redirect to login page.\nif(redirectToLogin){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login',state:{from:props.location.pathname,message:'Login to play the game'}}});}if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"Spinner\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"primary\"})});}// if both player joined already in the game then displat lobby full message.\nif(isLobbyFull){return/*#__PURE__*/_jsx(Alert,{variant:\"warning\",children:\"Lobby is already full and game is started. Create new game to play with friends\"});}return/*#__PURE__*/_jsxs(\"div\",{id:\"GameContainer\",children:[/*#__PURE__*/_jsx(Modal,{show:showPopUp,backdrop:\"static\",onHide:function onHide(){return setShowPopUp(false);},keyboard:false,children:/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:matchStatus})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"left-sidebar-wrapper\",children:[/*#__PURE__*/_jsx(Table,{striped:true,bordered:true,hover:true,variant:\"dark\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[inCheck?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{colSpan:\"2\",id:\"in-check-text\",children:[turn.charAt(0).toUpperCase()+turn.slice(1),' ',\"in Check\"]})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Turn\"}),/*#__PURE__*/_jsx(\"td\",{children:turn})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Your Color\"}),/*#__PURE__*/_jsx(\"td\",{children:playerColor})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Status\"}),matchStatus==='Ongoing'?/*#__PURE__*/_jsx(\"td\",{children:matchStatus}):matchStatus==='You Won'?/*#__PURE__*/_jsx(\"td\",{id:\"win-status\",children:\"You Won\"}):/*#__PURE__*/_jsx(\"td\",{id:\"lose-status\",children:\"You Lose\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{id:\"game-link-container\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Send this game id to play with friends\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"game-link\",value:gameId,disabled:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"chessboard-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"player-information-opponent\",children:opponentDetails.username!==''?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Username: \",opponentDetails.username]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Rating: \",opponentDetails.rating]})]}):/*#__PURE__*/_jsx(\"div\",{children:\"Waiting for opponent to Join...\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"chessboard\",children:/*#__PURE__*/_jsx(Chessboard,{width:'550',position:fen,onDrop:function onDrop(move){handleMove({from:move.sourceSquare,to:move.targetSquare,promotion:'q'});},orientation:playerColor,onMouseOverSquare:onMouseOverSquare,onMouseOutSquare:onMouseOutSquare,squareStyles:squareStyles,lightSquareStyle:{backgroundColor:'AliceBlue'},darkSquareStyle:{backgroundColor:'#007f5f'}// darkSquareStyle={{ backgroundColor: \"#4a4e69\" }}\n// darkSquareStyle={{ backgroundColor: \"CornFlowerBlue\" }}\n})}),/*#__PURE__*/_jsxs(\"div\",{id:\"player-information-you\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Username: \",User.user.username]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Rating: \",User.user.rating]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"right-sidebar-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{id:\"moves-table-container\",children:/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,variant:\"dark\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",id:\"moves-header\",children:\"Moves\"})})}),/*#__PURE__*/_jsx(\"tbody\",{children:moves.map(function(move,index){if(index%2===0){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"move-color-indicator-white\"}),/*#__PURE__*/_jsx(\"td\",{className:\"move-text\",children:\"\".concat(move.from,\" -> \").concat(move.to)})]},index);}else{return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"move-color-indicator-black\"}),/*#__PURE__*/_jsx(\"td\",{className:\"move-text\",children:\"\".concat(move.from,\" -> \").concat(move.to)})]},index);}})})]})})})]}),/*#__PURE__*/_jsx(\"audio\",{className:\"audio-element\",children:/*#__PURE__*/_jsx(\"source\",{type:\"audio/mp3\",src:chess_move_sound})})]});}export default Game;","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","axios","io","Chess","Chessboard","SERVER_URL","Modal","Redirect","Alert","Spinner","Table","UserContext","chess_move_sound","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","socket","Game","props","_useState","_useState2","_slicedToArray","fen","setFen","_useState3","_useState4","moves","setMoves","_useState5","_useState6","turn","setTurn","_useState7","_useState8","playerColor","setPlayerColor","_useState9","_useState10","matchStatus","setMatchStatus","_useState11","_useState12","inCheck","setInCheck","_useState13","_useState14","showPopUp","setShowPopUp","_useState15","username","rating","_useState16","opponentDetails","setOpponentDetails","_useState17","_useState18","squareStyles","setSquareStyles","_useState19","_useState20","redirectToLogin","setRedirectToLogin","_useState21","_useState22","isLoading","setisLoading","_useState23","_useState24","isLobbyFull","setIsLobbyFull","chess","User","gameId","match","params","signal","CancelToken","source","movesRef","turnRef","playerColorRef","isMounted","checkWinStatus","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lastMoveColor","winner","wrap","_callee$","_context","prev","next","in_draw","in_checkmate","post","concat","cancelToken","token","t0","isCancel","console","error","message","stop","_x","apply","arguments","updateScroll","element","document","getElementById","scrollTop","scrollHeight","fetchOpponentDetails","_ref2","_callee2","res","_callee2$","_context2","localStorage","getItem","get","headers","color","current","sent","data","bothPlayerJoined","length","JoinGame","_ref3","_callee4","user","game","_callee4$","_context4","isValid","removeItem","abrupt","userId","id","load","in_check","split","emit","on","audioEl","getElementsByClassName","play","_toConsumableArray","from","move","to","_callee3","_callee3$","_context3","close","cancel","handleMove","_ref5","_callee5","newFen","_callee5$","_context5","_x2","onMouseOverSquare","square","verbose","styling","i","background","borderRadius","onMouseOutSquare","pathname","state","location","className","children","animation","variant","show","backdrop","onHide","keyboard","Header","closeButton","Title","striped","bordered","hover","colSpan","charAt","toUpperCase","slice","value","disabled","width","position","onDrop","sourceSquare","targetSquare","promotion","orientation","lightSquareStyle","backgroundColor","darkSquareStyle","map","index","type","src"],"sources":["/home/mushrambo/projects/eks-chess/chess-front-end/src/components/Game/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport Chess from 'chess.js';\nimport Chessboard from 'chessboardjsx';\nimport { SERVER_URL } from '../Utils/Config';\nimport Modal from 'react-bootstrap/Modal';\nimport { Redirect } from 'react-router-dom';\nimport { Alert, Spinner, Table } from 'react-bootstrap';\nimport UserContext from '../../context/UserContext';\nimport chess_move_sound from '../../assets/chess_move_sound.mp3';\n\n\n\n\n// Learn more about what is fen in chess from here.\n// https://www.chess.com/terms/fen-chess\n\n/*\n-first some user creates a game.\n-when someone tries to join game by using game link, first it is checked that game is full or not.\n-if game is not full then user is joined to that game and socket event is fired to other player that opponent has joined.\n-when any player moves the piece, after validating that move another socket event is emitted for the move.\n*/\n\nlet socket = io(SERVER_URL);\n\nfunction Game(props) {\n    const [fen, setFen] = useState(\n        'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n    );\n    const [moves, setMoves] = useState([]);\n    const [turn, setTurn] = useState('');\n    const [playerColor, setPlayerColor] = useState('');\n    const [matchStatus, setMatchStatus] = useState('Ongoing');\n    const [inCheck, setInCheck] = useState('');\n\n    // when game ends a popup is used to show the status(Win, Lose, Draw)\n    const [showPopUp, setShowPopUp] = useState(false);\n\n    const [opponentDetails, setOpponentDetails] = useState({\n        username: '',\n        rating: 0,\n    });\n\n    // when user hovers over a piece on board. to indicate all possible positions, this positions are given different styling.\n    const [squareStyles, setSquareStyles] = useState({});\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [isLobbyFull, setIsLobbyFull] = useState(false);\n\n    let chess = new Chess(fen);\n    const User = useContext(UserContext);\n    const gameId = props.match.params.gameId;\n    const signal = axios.CancelToken.source();\n\n    const movesRef = useRef(moves);\n    const turnRef = useRef(turn);\n    const playerColorRef = useRef(playerColor);\n    const isMounted = useRef(true);\n\n    const checkWinStatus = async (lastMoveColor) => {\n        // check if game is ended or not. if ended then determine the winner using who played last move.\n        let winner = '';\n        if (chess.in_draw()) {\n            winner = 'draw';\n        } else if (chess.in_checkmate()) {\n            winner = lastMoveColor;\n        }\n        if (winner !== '') {\n            if (winner === 'd') {\n                setMatchStatus('Game draw');\n            } else if (lastMoveColor === playerColor) {\n                setMatchStatus('You Won');\n            } else {\n                setMatchStatus('You Lose');\n            }\n            setShowPopUp(true);\n            try {\n                await axios.post(\n                    `${SERVER_URL}/g/gameStatus`,\n                    { winner: winner, gameId: gameId },\n                    { cancelToken: signal.token }\n                );\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.error('Error: ', error.message);\n                }\n            }\n        }\n    };\n    const updateScroll = () => {\n        // if moves history doesn't fit in window then scroll down to latest move.\n        var element = document.getElementById('moves-table-container');\n        if (element) element.scrollTop = element.scrollHeight;\n    };\n\n    const fetchOpponentDetails = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            const res = await axios.get(`${SERVER_URL}/g/getOpponentDetails`, {\n                headers: { token: token },\n                params: { gameId: gameId, color: playerColorRef.current },\n            });\n            if (res.data.bothPlayerJoined) {\n                setOpponentDetails({\n                    username: res.data.username,\n                    rating: res.data.rating,\n                });\n            }\n        } catch (error) {\n            if (axios.isCancel(error)) {\n                console.error('Error: ', error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        // if new move is added then scroll down to latest move.\n        if (movesRef.current.length !== moves.length) updateScroll();\n        turnRef.current = turn;\n        playerColorRef.current = playerColor;\n        movesRef.current = moves;\n    });\n\n    useEffect(() => {\n        const JoinGame = async () => {\n            if (!socket) {\n                socket = io(SERVER_URL);\n            }\n            try {\n                // CHecking if user has logged in or not.\n                // if not then redirect user to login page.\n                const token = localStorage.getItem('token');\n                const user = await axios.post(`${SERVER_URL}/u/verifyToken`, {\n                    token: token,\n                });\n                if (!user.data.isValid) {\n                    setRedirectToLogin(true);\n                    localStorage.removeItem('token');\n                    return;\n                }\n\n                // now retrive the current game data.\n                const game = await axios.post(\n                    `${SERVER_URL}/g/join`,\n                    { gameId: gameId, userId: user.data.id },\n                    { cancelToken: signal.token }\n                );\n\n                if (isMounted.current) {\n                    // setting up the chess configs\n                    chess.load(game.data.fen);\n                    setFen(game.data.fen);\n                    setMoves(game.data.moves);\n                    setInCheck(chess.in_check() && !chess.in_checkmate());\n                    setPlayerColor(game.data.playerColor);\n\n                    // get current player's turn from fen notation.\n                    game.data.fen.split(' ')[1] === 'w'\n                        ? setTurn('white')\n                        : setTurn('black');\n                    // if match is over then find the game status.\n                    if (game.data.winner !== '') {\n                        if (game.data.winner === 'draw') {\n                            setMatchStatus('Game Draw');\n                        } else if (game.data.winner === game.data.playerColor) {\n                            setMatchStatus('You Won');\n                        } else {\n                            setMatchStatus('You lose');\n                        }\n                    }\n                    await fetchOpponentDetails();\n                    setisLoading(false);\n\n                    // make the socket connection/\n                    socket.emit('join', { gameId: gameId });\n                    socket.on('receiveMove', (data) => {\n                        // check if this move is of opponents or not.\n                        if (data.playerColor !== playerColorRef.current) {\n                            const audioEl =\n                                document.getElementsByClassName(\n                                    'audio-element'\n                                )[0];\n                            audioEl.play();\n\n                            chess.load(data.fen);\n                            checkWinStatus(data.playerColor);\n\n                            if (isMounted.current) {\n                                setFen(chess.fen());\n                                setMoves([\n                                    ...movesRef.current,\n                                    { from: data.move.from, to: data.move.to },\n                                ]);\n                                setInCheck(\n                                    chess.in_check() && !chess.in_checkmate()\n                                );\n                                setTurn(playerColorRef.current);\n                            }\n                        }\n                    });\n                    // whenever opponent joins set the  opponentDetail state.\n                    socket.on('userJoined', async () => {\n                        fetchOpponentDetails();\n                    });\n                }\n            } catch (error) {\n                if (axios.isCancel(error))\n                    console.error('Error: ', error.message);\n                else setIsLobbyFull(true);\n                setisLoading(false);\n            }\n        };\n        JoinGame();\n\n        return () => {\n            isMounted.current = false;\n            if (socket) {\n                socket.close();\n                socket = null;\n            }\n            signal.cancel('Api calls are being cancelled');\n        };\n    }, []);\n\n\n\n    const handleMove = async (move) => {\n        // if user tries to move some piece but it is not that user's turn then return.\n        if (turn !== playerColor) {\n            return;\n        }\n        if (chess.move(move)) {\n            // plat the chess move sound.\n            const audioEl = document.getElementsByClassName('audio-element')[0];\n            audioEl.play();\n\n            const newFen = chess.fen();\n            socket.emit('postMove', {\n                gameId,\n                playerColor,\n                move,\n                fen: newFen,\n            });\n\n            checkWinStatus(playerColor);\n\n            if (isMounted.current) {\n                setFen(newFen);\n                setMoves([...moves, { from: move.from, to: move.to }]);\n                setInCheck(chess.in_check() && !chess.in_checkmate());\n                // get the player's turn from fen notation.\n                if (newFen.split(' ')[1] === 'w') {\n                    setTurn('white');\n                } else {\n                    setTurn('black');\n                }\n            }\n\n            try {\n                await axios.post(\n                    `${SERVER_URL}/g/postMove`,\n                    { gameId: gameId, move: move, fen: newFen },\n                    { cancelToken: signal.token }\n                );\n            } catch (error) {\n                if (axios.isCancel(error)) {\n                    console.error('Error: ', error.message);\n                }\n            }\n        }\n    };\n\n    const onMouseOverSquare = (square) => {\n        // when user puts mouse over some square then generate possible movement from that square and display it.\n        const moves = chess.moves({ square: square, verbose: true });\n        const styling = {};\n        for (let i = 0; i < moves.length; i++) {\n            styling[moves[i].to] = {\n                background:\n                    'radial-gradient(circle, #b5e48c 38%, transparent 40%)',\n                borderRadius: '50%',\n            };\n        }\n        setSquareStyles(styling);\n    };\n    const onMouseOutSquare = () => {\n        setSquareStyles({});\n    };\n\n    // if user is not logged in then redirect to login page.\n    if (redirectToLogin) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/login',\n                    state: {\n                        from: props.location.pathname,\n                        message: 'Login to play the game',\n                    },\n                }}\n            />\n        );\n    }\n    if (isLoading) {\n        return (\n            <div className=\"Spinner\">\n                <Spinner animation=\"border\" variant=\"primary\" />\n            </div>\n        );\n    }\n    // if both player joined already in the game then displat lobby full message.\n    if (isLobbyFull) {\n        return (\n            <Alert variant=\"warning\">\n                Lobby is already full and game is started. Create new game to\n                play with friends\n            </Alert>\n        );\n    }\n\n    return (\n        <div id=\"GameContainer\">\n            <Modal\n                show={showPopUp}\n                backdrop=\"static\"\n                onHide={() => setShowPopUp(false)}\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{matchStatus}</Modal.Title>\n                </Modal.Header>\n            </Modal>\n\n            <div id=\"wrapper\">\n                <div id=\"left-sidebar-wrapper\">\n                    <Table striped bordered hover variant=\"dark\">\n                        <tbody>\n                            {inCheck ? (\n                                <tr>\n                                    <td colSpan=\"2\" id=\"in-check-text\">\n                                        {turn.charAt(0).toUpperCase() +\n                                            turn.slice(1)}{' '}\n                                        in Check\n                                    </td>\n                                </tr>\n                            ) : (\n                                <></>\n                            )}\n                            <tr>\n                                <td>Turn</td>\n                                <td>{turn}</td>\n                            </tr>\n                            <tr>\n                                <td>Your Color</td>\n                                <td>{playerColor}</td>\n                            </tr>\n                            <tr>\n                                <td>Status</td>\n                                {matchStatus === 'Ongoing' ? (\n                                    <td>{matchStatus}</td>\n                                ) : matchStatus === 'You Won' ? (\n                                    <td id=\"win-status\">You Won</td>\n                                ) : (\n                                    <td id=\"lose-status\">You Lose</td>\n                                )}\n                            </tr>\n                        </tbody>\n                    </Table>\n                    <div id=\"game-link-container\">\n                        <h6>Send this game id to play with friends</h6>\n                        <textarea\n                            className=\"form-control\"\n                            id=\"game-link\"\n                            value={gameId}\n                            disabled={true}\n                        />\n                    </div>\n                </div>\n\n                <div id=\"chessboard-wrapper\">\n                    <div id=\"player-information-opponent\">\n                        {opponentDetails.username !== '' ? (\n                            <>\n                                <div>Username: {opponentDetails.username}</div>\n                                <div>Rating: {opponentDetails.rating}</div>\n                            </>\n                        ) : (\n                            <div>Waiting for opponent to Join...</div>\n                        )}\n                    </div>\n                    <div id=\"chessboard\">\n                        <Chessboard\n                            width={'550'}\n                            position={fen}\n                            onDrop={(move) => {\n                                handleMove({\n                                    from: move.sourceSquare,\n                                    to: move.targetSquare,\n                                    promotion: 'q',\n                                });\n                            }}\n                            orientation={playerColor}\n                            onMouseOverSquare={onMouseOverSquare}\n                            onMouseOutSquare={onMouseOutSquare}\n                            squareStyles={squareStyles}\n                            lightSquareStyle={{ backgroundColor: 'AliceBlue' }}\n                            darkSquareStyle={{ backgroundColor: '#007f5f' }}\n                            // darkSquareStyle={{ backgroundColor: \"#4a4e69\" }}\n                            // darkSquareStyle={{ backgroundColor: \"CornFlowerBlue\" }}\n                        />\n                    </div>\n                    <div id=\"player-information-you\">\n                        <div>Username: {User.user.username}</div>\n                        <div>Rating: {User.user.rating}</div>\n                    </div>\n                </div>\n\n                <div id=\"right-sidebar-wrapper\">\n                    <div id=\"moves-table-container\">\n                        <Table striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th colSpan=\"2\" id=\"moves-header\">\n                                        Moves\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {moves.map((move, index) => {\n                                    if (index % 2 === 0) {\n                                        return (\n                                            <tr key={index}>\n                                                <td className=\"move-color-indicator-white\"></td>\n                                                <td className=\"move-text\">{`${move.from} -> ${move.to}`}</td>\n                                            </tr>\n                                        );\n                                    } else {\n                                        return (\n                                            <tr key={index}>\n                                                <td className=\"move-color-indicator-black\"></td>\n                                                <td className=\"move-text\">{`${move.from} -> ${move.to}`}</td>\n                                            </tr>\n                                        );\n                                    }\n                                })}\n                            </tbody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n            <audio className=\"audio-element\">\n                <source type=\"audio/mp3\" src={chess_move_sound}></source>\n            </audio>\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
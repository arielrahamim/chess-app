{"ast":null,"code":"import _regeneratorRuntime from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/mushrambo/projects/eks-chess/chess-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useContext}from'react';import axios from'axios';import{Alert,Spinner}from'react-bootstrap';import{Link,useHistory}from'react-router-dom';import UserContext from'../../context/UserContext';import ChessBG from'../../assets/chess_bg_1.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _require=require('../Utils/Config'),SERVER_URL=_require.SERVER_URL;function Login(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isLoading=_useState10[0],setIsLoading=_useState10[1];var history=useHistory();var User=useContext(UserContext);useEffect(function(){// if it is redirected from different component then it might have also included some error message.\nif(props.location.state&&props.location.state.message){setError(props.location.state.message);}// when user confirms email address. they are redirected to login page with params indicating that user has confirmed email address.\nif(new URLSearchParams(props.location.search).get('EmailConfirmedRedirect')==='true'){setMessage('Your Email address is confirmed successfully. Now login to continue');}// when user confirms email address. they are redirected to login page with params indicating that user has confirmed email address.\nif(new URLSearchParams(props.location.search).get('EmailConfirmedRedirect')==='false'){setMessage('error in email/token confirmation');}},[]);var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();setIsLoading(true);_context.prev=2;_context.next=5;return axios.post(\"\".concat(SERVER_URL,\"/u/login\"),{email:email,password:password});case 5:res=_context.sent;setIsLoading(false);// set the user data in UserContext\nUser.setUser({id:res.data.id,username:res.data.username,rating:res.data.rating,isValid:true});localStorage.setItem('token',res.data.token);// if previously user was redirected from some component to login then after login redirect back to original component.\n// else redirect to home apge\nif(props.location.state&&props.location.state.from){history.push(props.location.state.from);}else{history.push('/');}_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);if(_context.t0.response&&_context.t0.response.data)setError(_context.t0.response.data.error);setIsLoading(false);case 16:case\"end\":return _context.stop();}},_callee,null,[[2,12]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:\"url(\".concat(ChessBG,\")\"),height:'100%'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"card col-lg-3 login-form\",children:[message!==''&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:message}),error!==''&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",id:\"email\",\"aria-describedby\":\"emailHelp\",placeholder:\"Enter Email\",onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"password\",placeholder:\"Password\",onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Link,{to:\"/resetPassword\",children:\"Forgot password?\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"LoginButton\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isLoading,children:\"Login\"})}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"LoginSpinner\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",variant:\"primary\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register Now\"})]})]})]})});}export default Login;","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","Alert","Spinner","Link","useHistory","UserContext","ChessBG","jsx","_jsx","jsxs","_jsxs","_require","require","SERVER_URL","Login","props","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","_useState7","_useState8","message","setMessage","_useState9","_useState10","isLoading","setIsLoading","history","User","location","state","URLSearchParams","search","get","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_callee$","_context","prev","next","preventDefault","post","concat","sent","setUser","id","data","username","rating","isValid","localStorage","setItem","token","from","push","t0","response","stop","_x","apply","arguments","style","backgroundImage","height","children","className","variant","onSubmit","htmlFor","type","placeholder","onChange","target","value","to","disabled","animation"],"sources":["/home/mushrambo/projects/eks-chess/chess-front-end/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { Alert, Spinner } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport ChessBG from '../../assets/chess_bg_1.jpg';\nconst { SERVER_URL } = require('../Utils/Config');\n\n\nfunction Login(props) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [message, setMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const history = useHistory();\n    const User = useContext(UserContext);\n\n    useEffect(() => {\n        // if it is redirected from different component then it might have also included some error message.\n        if (props.location.state && props.location.state.message) {\n            setError(props.location.state.message);\n        }\n        // when user confirms email address. they are redirected to login page with params indicating that user has confirmed email address.\n        if (new URLSearchParams(props.location.search).get('EmailConfirmedRedirect') === 'true') {\n            setMessage('Your Email address is confirmed successfully. Now login to continue');\n        }\n        // when user confirms email address. they are redirected to login page with params indicating that user has confirmed email address.\n        if (new URLSearchParams(props.location.search).get('EmailConfirmedRedirect') === 'false') {\n            setMessage('error in email/token confirmation');\n        }\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        setIsLoading(true);\n        try {\n            const res = await axios.post(`${SERVER_URL}/u/login`, { email: email, password: password });\n\n            setIsLoading(false);\n            // set the user data in UserContext\n            User.setUser({\n                id: res.data.id,\n                username: res.data.username,\n                rating: res.data.rating,\n                isValid: true,\n            });\n            localStorage.setItem('token', res.data.token);\n\n            // if previously user was redirected from some component to login then after login redirect back to original component.\n            // else redirect to home apge\n            if (props.location.state && props.location.state.from) {\n                history.push(props.location.state.from);\n            } else {\n                history.push('/');\n            }\n        } catch (error) {\n            if (error.response && error.response.data) setError(error.response.data.error);\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div style={{ backgroundImage: `url(${ChessBG})`, height: '100%' }}>\n            <div className='card col-lg-3 login-form'>\n                {message !== '' && <Alert variant='success'>{message}</Alert>}\n                {error !== '' && <Alert variant='danger'>{error}</Alert>}\n\n                <form onSubmit={handleSubmit}>\n                    <div className='form-group'>\n                        <label htmlFor='email'>Email Address</label>\n                        <input\n                            type='email'\n                            className='form-control'\n                            id='email'\n                            aria-describedby='emailHelp'\n                            placeholder='Enter Email'\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor='password'>Password</label>\n                        <input\n                            type='password'\n                            className='form-control'\n                            id='password'\n                            placeholder='Password'\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </div>\n                    <div>\n                        <Link to='/resetPassword'>Forgot password?</Link>\n                    </div>\n                    <div className='LoginButton'>\n                        <div>\n                            <button type='submit' className='btn btn-primary' disabled={isLoading}>\n                                Login\n                            </button>\n                        </div>\n                        {isLoading && (\n                            <div className='LoginSpinner'>\n                                <Spinner animation='border' variant='primary' />\n                            </div>\n                        )}\n                    </div>\n                    <div>\n                        Don't have an account? <Link to='/register'>Register Now</Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}